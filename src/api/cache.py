from redis import Redis
from json import loads, dumps

# TODO: Put cache's information into config file
CACHE_HOST_IP = '127.0.0.1'
CACHE_PORT = 6750


class Cache:
    def __init__(self):
        self.cache_ip = CACHE_HOST_IP
        self.port = CACHE_PORT
        self.cache = Redis(host=self.cache_ip, port=self.port)

    def save_predictions_to_cache(self, file_id: str, file_name: str, predictions: dict):
        full_prediction = {
            'file': file_name,
            'md5': file_id,
            'predictions': predictions
        }
        self.cache.set(name=file_id, value=dumps(full_prediction))

    def save_error_messages_to_cache(self, file_id: str, error_msg: dict):
        self.cache.set(name=file_id, value=dumps(error_msg))

    def read_from_cache(self, file_id: str) -> dict:
        json_data = self.cache.get(file_id)
        if json_data is None:
            return None
        return loads(json_data)

    def count_items_from_cache(self):
        return len(self.cache.keys())

    def clear_cache(self):
        self.cache.flushall()
