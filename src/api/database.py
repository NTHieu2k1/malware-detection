from json import loads
from mongoengine import Document, StringField, DictField, connect

# TODO: Put database's information into config file
DB_HOST_IP = '127.0.0.1'
DB_PORT = 27017


class Prediction(Document):
    md5 = StringField(required=True, primary_key=True)
    prediction = DictField(required=True)


class Status(Document):
    md5 = StringField(required=True, primary_key=True)
    file_name = StringField(required=True)
    file_path = StringField(required=True)
    status = StringField(required=True, max_length=20)


class ErrorFile(Document):
    md5 = StringField(required=True, primary_key=True)
    error_msg = DictField(required=True)


class Database:
    def __init__(self):
        connect(db='malware_db', host=DB_HOST_IP, port=DB_PORT)

    def create_new_status(self, file_id, file_name: str, file_path: str, status: str):
        new_status = Status(md5=file_id, file_name=file_name,
                            file_path=file_path, status=status)
        new_status.save()

    def load_file_name(self, file_id):
        try:
            file_name = Status.objects(md5=file_id)[0].file_name
            return file_name
        except IndexError:
            return None

    def load_file_path(self, file_id):
        try:
            file_path = Status.objects(md5=file_id)[0].file_path
            return file_path
        except IndexError:
            return None

    def load_status(self, file_id):
        try:
            status = Status.objects(md5=file_id)[0].status
            return status
        except IndexError:
            return None

    def update_status(self, file_id, new_status):
        Status.objects(md5=file_id).update(set__status=new_status)

    def save_new_prediction(self, file_id, prediction_result: dict):
        new_prediction = Prediction(md5=file_id, prediction=prediction_result)
        new_prediction.save()

    def load_prediction(self, file_id):
        try:
            loaded_output = Prediction.objects(md5=file_id)[0].prediction
            return loaded_output
        except IndexError:
            return None

    def save_new_error_file(self, file_id, error_msg: dict):
        new_error_file = ErrorFile(md5=file_id, error_msg=error_msg)
        new_error_file.save()

    def load_error_file(self, file_id):
        try:
            error_msg = ErrorFile.objects(md5=file_id)[0].error_msg
            return error_msg
        except IndexError:
            return None

    def load_all_prediction_results(self):
        return loads(Prediction.objects.to_json())
