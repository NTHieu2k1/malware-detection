import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
from src.data.crawlers import get_project_root_directory
from pathlib import Path


class DataVisualizer:
    def __init__(self):
        self.csv_location = get_project_root_directory() / Path('data/interim/extracted_malware_dataset.csv')
        self.raw_dataframe = pd.read_csv(self.csv_location)

    def display_first_n_samples(self, n_samples: int):
        print(self.raw_dataframe.head(n_samples))

    def display_dataset_brief_info(self):
        print(self.raw_dataframe.info())

    def show_number_of_samples_by_class(self):
        print(self.raw_dataframe['Class'].value_counts())

    def display_dataset_statistics_info(self):
        print(self.raw_dataframe.describe())

    def visualize_all_features(self, feature_index=-1):
        # Make index to a temporary column
        self.raw_dataframe.reset_index(inplace=True)
        features = self.raw_dataframe.columns[1:-1]
        num_of_features = len(features)
        if feature_index == -1:
            # Set up graph figure and axes
            figure, axes = plt.subplots(nrows=num_of_features, figsize=(10, 10*num_of_features))
            # Plot each sub-plot corresponding to each feature
            for index in range(num_of_features):
                sns.scatterplot(x='index', y=features[index], hue='Class', data=self.raw_dataframe, ax=axes[index])
        else:
            sns.scatterplot(x='index', y=features[feature_index], hue='Class', data=self.raw_dataframe)
        plt.show()
        # Remove index column
        self.raw_dataframe.drop(['index'], axis=1, inplace=True)

    def get_mean_differences_between_classes(self):
        # Split the dataset into benign and malware
        benign_dataframe = self.raw_dataframe[self.raw_dataframe['Class'] == 'benign']
        malware_dataframe = self.raw_dataframe[self.raw_dataframe['Class'] == 'malware']
        features = self.raw_dataframe.columns[:-1]
        # Calculate mean differences
        mean_differences = dict()
        for feature in features:
            mean_differences[feature] = malware_dataframe[feature].mean() - benign_dataframe[feature].mean()
        return mean_differences

